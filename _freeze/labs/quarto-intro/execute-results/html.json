{
  "hash": "33386155bc8e5f55da99306a510856a4",
  "result": {
    "markdown": "---\ntitle: \"Quarto Introduction\"\nauthor: \"Your Name\"\nformat:\n  html:\n    code-tools: true\neditor: visual\n---\n\n\n## Learning Objectives\n\n1.  Open the quarto introduction file in your Rstudio and render to create an html output file\n2.  Learn some basic markdown syntax to include text and run code\n3.  Alter the YAML to include your name and output to a different file format (e.g. docx)\n\n## R packages used\n\nFor this introduction, I used three R packages. If you have never used these before, they will need to be installed once, e.g.\n\n``` r\ninstall.packages(\"ggplot2\")\ninstall.packages(\"rms\")\ninstall.packages(\"Hmisc\")\n```\n\nIf they have already been installed, you can load these packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(rms)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Hmisc\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: survival\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Formula\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'Hmisc'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked _by_ '.GlobalEnv':\n\n    knitrSet\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: SparseM\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'SparseM'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:base':\n\n    backsolve\n```\n:::\n\n```{.r .cell-code}\nlibrary(Hmisc)\n```\n:::\n\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.\n\nQuarto includes many more features than I will cover in this course. It is *not* a learning objective of this course that you learn all of the features included in Quarto. Instead, I want to cover a few of the most useful things and provide a starting point for those interested in learning more.\n\n## Running Code\n\nWhen you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\nYou can add options to executable code like this\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\nThe `echo: false` option disables the printing of code (only output is displayed).\n\n### Plots\n\nYou can include plots\n\n\n::: {.cell fig-cap-location='margin'}\n\n```{.r .cell-code}\nggplot(cars, aes(x=speed, y=dist)) + \n  geom_smooth() + \n  xlab(\"Speed (mph)\") + \n  ylab(\"Stopping Distance (feet)\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![Date recorded in the 1920s](quarto-intro_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\nSpeed and stopping distance of cars\n:::\n\n\n### Tables\n\nAnd tables that are simple text\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create some data\nset.seed(12345) # Fpr reproducibility\nexampledata <- data.frame(age=rnorm(500,50,5),\n                          sbp=rnorm(500,120,12),\n                          trt=factor(sample(c(\"Drug\",\"Placebo\"), 500, replace=TRUE))\n)\nf <- summaryM(age + sbp ~ trt, data=exampledata, test=TRUE)\nprint(f, digits=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\nDescriptive Statistics  (N=500)\n\n+---+------------------+------------------+------------------------+\n|   |Drug              |Placebo           |  Test                  |\n|   |(N=260)           |(N=240)           |Statistic               |\n+---+------------------+------------------+------------------------+\n|age|        47/50/53  |        47/51/54  | F=0.5 d.f.=1,498 P=0.48|\n+---+------------------+------------------+------------------------+\n|sbp|       113/120/129|       112/120/128|F=0.02 d.f.=1,498 P=0.89|\n+---+------------------+------------------+------------------------+\n```\n:::\n:::\n\n\nTable can also be formatted to improve appearance. Here is an html version of the same table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhtml(f, digits=3)\n```\n\n::: {.cell-output-display}\n```{=html}\n<table class='gmisc_table' style='border-collapse: collapse; margin-top: 1em; margin-bottom: 1em;' >\n<thead>\n<tr><td colspan='4' style='text-align: left;'>\nDescriptive Statistics<i>  (N=500)</i>.  </td></tr>\n<tr><th style='border-bottom: 1px solid grey; font-weight: 900; border-top: 2px solid grey; width:3ex; text-align: center;'></th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: center;'>Drug<br><i>N=260</i></th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: center;'>Placebo<br><i>N=240</i></th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: center;'>Test Statistic<br></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style='width:3ex; text-align: left;'>age</td>\n<td style='padding: 0 7px 0 7px; text-align: center;'>47.4 50.3 53.2</td>\n<td style='padding: 0 7px 0 7px; text-align: center;'>47.0 50.7 54.0</td>\n<td style='padding: 0 7px 0 7px; text-align: center;'><i>F</i><sub><span style=\"font-size: 80%;\">1 498</span></sub>=0.5, P=0.479</td>\n</tr>\n<tr>\n<td style='width:3ex; border-bottom: 2px solid grey; text-align: left;'>sbp</td>\n<td style='padding: 0 7px 0 7px; border-bottom: 2px solid grey; text-align: center;'>113 120 129</td>\n<td style='padding: 0 7px 0 7px; border-bottom: 2px solid grey; text-align: center;'>112 120 128</td>\n<td style='padding: 0 7px 0 7px; border-bottom: 2px solid grey; text-align: center;'><i>F</i><sub><span style=\"font-size: 80%;\">1 498</span></sub>=0.02, P=0.89</td>\n</tr>\n</tbody>\n<tfoot><tr><td colspan='4'>\n<span style=\"font-size: 80%;\"><i>a</i></span> <i>b</i> <span style=\"font-size: 80%;\"><i>c</i></span> represent the lower quartile <i>a</i>, the median <i>b</i>, and the upper quartile <i>c</i> for continuous variables. <br> Test used: Wilcoxon test .</td></tr></tfoot>\n</table>\n```\n:::\n:::\n\n\n## Quarto YAML\n\nThe beginning of this document of the document contains metadata that controls the document appearance, output format, and many other options. The current lines were automatically generated when I create a new document (**File** \\> **New File** \\> **Quarto Document...**)\n\nFor longer documents, it can be useful to add a table of contents. A simple toc can added with the line.\n\n``` yaml\ntoc: true\n```\n\nAlso, the default output type is an html document. This is a good choice, but if you prefer other options, you can alter the yaml to produce Word files, PDFs, or many other options. Tab-completion is supported to see the various options.\n\nIn order to create PDFs you will need to install a recent distribution of TeX. We recommend the use of TinyTeX (which is based on TexLive), which you can install with the following command:\n\n``` terminal\nquarto install tinytex\n```\n\nMore details on [authoring Quarto documents in Rstudio](https://quarto.org/docs/get-started/authoring/rstudio.html) are available elsewhere.\n\n## Thing to try\n\n1.  Alter the YAML to include your name\n2.  Alter the YAML to output to a different file format, e.g. docx\n3.  Add some text, code, or graphics and render the document\n\n------------------------------------------------------------------------\n",
    "supporting": [
      "quarto-intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}