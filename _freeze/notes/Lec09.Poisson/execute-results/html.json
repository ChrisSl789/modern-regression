{
  "hash": "36d5d67e5388735a2c6bdbdb55f27916",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Poisson Regression\"\nsubtitle: \"Lecture 09\"\nname: Lec09.Poisson.qmd\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n## Count Data and Event Rates\n\n-   Sometimes a random variable measures the number of events occurring over some space and time interval\n\n-   Examples include\n\n    -   Number of polyps recurring in the three year interval between colonoscopies\n\n    -   Number of pulmonary exacerbations experienced by a cystic fibrosis patient in a year\n\n    -   Number of reflux events in a 24-hour period\n\n-   Count data have (in theory) no upper limit, although very large counts can be highly improbable\n\n-   When a response variable measures counts over space and time, we often summarize by considering the event rate\n\n    -   \"Event rate\" is the expected number of events per unit of space-time\n\n    -   The rate is thus a mean count\n\n    -   In most statistical problems, we know the interval of time and the volume of space sampled\n\n        -   Poisson models allow us to take into account the known interval of time/space using an \"offset\"\n\n## Poisson Model\n\n### Poisson distribution\n\n-   Often we assume that counts follow a Poisson distribution\n\n-   The Poisson distribution can be derived from the following assumptions\n\n    -   The expected number of events in an interval is proportional to the size of the interval\n\n    -   The probability that two events occur with an infinitesimally small interval of space-time is zero\n\n    -   The number of events occurring in disjoint (separate) intervals of space-time are independent\n\n-   (Note that the assumption of a constant rate with independence over space-time is pretty strong and rarely holds completely)\n\n-   Poisson distribution\n\n    -   Counts the events occurring at a constant rate $\\lambda$ in a specified time (and space) $t$\n\n        -   Independent intervals of time and space\n\n    -   Probability distribution has parameter $\\lambda > 0$\n\n        -   For $k = 0, 1, 2, \\ldots$\n\n            $$\\textrm{Pr}(Y = k) = \\frac{e^{-\\lambda t} (\\lambda t)^k}{k!}$$\n\n        -   Mean: $E[Y] = \\lambda t$\n\n        -   Var: $V[Y] = \\lambda t$\n\n        -   (Mean-variance relationship, like binary data)\n\n### Regression Model\n\n-   When the response variable represent counts of some event, we usually model using the (log) rate with Poisson regression\n\n    -   Compares rates of response per space-time (e.g. person-years) across groups\n\n    -   \"Rate ratio\"\n\n-   Why not use linear regression? The reasons are primarily statistical\n\n    -   The rate is in fact a mean\n\n    -   For Poisson $Y$ having event rate $\\lambda$ measured over time $t$\n\n        -   The mean is equal to the variance (both are $\\lambda t$)\n\n    -   We want to be able to account for\n\n        -   Different areas of space or length of time for measuring counts\n\n        -   Mean-variance relationship (if not using robust standard errors)\n\n-   In Poisson regression, we tend to use a log link when modeling the event rate\n\n    -   As in other models, a log link means that we are assuming a multiplicative modeling\n\n        -   Multiplicative model $\\rightarrow$ comparisons between groups based on ratios\n\n        -   Additive model $\\rightarrow$ comparisons between groups based on differences\n\n    -   Log link also has the best technical statistical properties\n\n        -   Log rate is the \"canonical parameter\" for the Poisson distribution\n\n        -   Being the canonical parameter makes the calculus and mathematical properties easier to derive, and thus easier to understand from a theoretical perspective\n\n-   Poisson regression\n\n    -   Response variable is count of event over space-time (often person-years)\n\n    -   Offset variable specifies amount of space-time\n\n    -   Allows continuous or multiple grouping variables\n\n        -   But will also work with binary grouping variables\n\n-   Simple Poisson Regression\n\n    -   Modeling rate of count response $Y$ on predictor $X$\n\n        -   Distribution: $\\textrm{Pr}(Y_i = k | T_i = t_i) = \\frac{e^{-\\lambda_i t_i} (\\lambda_i t_i)^k}{k!}$\n\n        -   Model: $\\textrm{log } E[Y_i | T_i, X_i] = \\textrm{log}\\left(\\lambda_i T_i\\right) = \\textrm{log}(T_i) + \\beta_0 + \\beta_1 \\times X_i$\n\n        -   $X_i = 0$: log $\\lambda_i = \\beta_0$\n\n        -   $X_i = x$: log $\\lambda_i = \\beta_0 + \\beta_1 \\times x$\n\n        -   $X_i = x+1$: log $\\lambda_i = \\beta_0 + \\beta_1 \\times x + \\beta_1$\n\n    -   To interpret as rates, exponentiate the parameters\n\n        -   Distribution: $\\textrm{Pr}(Y_i = k | T_i = t_i) = \\frac{e^{-\\lambda_i t_i} (\\lambda_i t_i)^k}{k!}$\n\n        -   Model: $\\textrm{log } E[Y_i | T_i, X_i] = \\textrm{log}\\left(\\lambda_i T_i\\right) = \\textrm{log}(T_i) + \\beta_0 + \\beta_1 \\times X_i$\n\n        -   $X_i = 0$: $\\lambda_i = e^{\\beta_0}$\n\n        -   $X_i = x$: $\\lambda_i = e^{\\beta_0 + \\beta_1 \\times x}$\n\n        -   $X_i = x+1$: $\\lambda_i = e^{\\beta_0 + \\beta_1 \\times x + \\beta_1}$\n\n-   Interpretation of the model\n\n    -   Intercept\n\n        -   Rate when the predictor is $0$ is found by exponentiation of the intercept from Poisson regression: $e^{\\beta_0}$\n\n    -   Slope\n\n        -   Rate ratio between groups differing in the value of the predictor by 1 unit is found by exponentiation of the slope from Poisson regression: $e^{\\beta_1}$\n\n## Example: Acid reflux and BMI\n\n### Data description\n\n-   Research question: Are the number of acid reflux events in a day related to body mass index (BMI)?\n\n-   Each subject pH in the esophagus in monitored continuously for about 24 hours\n\n-   Count the number of time pH drop below 4, which is called a \"reflux event\"\n\n-   Analysis (statistical) goals\n\n    -   Primary goal: Determine if there is an association between BMI and acid reflux rate\n\n    -   Secondary goal: Describe the (mean) trend in reflux rates as a function of BMI\n\n-   Variables\n\n    -   Response: Number of acid reflux events\n\n    -   Offset: Number of minutes subject was monitored\n\n    -   Predictor of interest: BMI\n\n    -   Other covariates: Presence of esophagitis at baseline\n\n### Descriptive Plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmi.data <- read.csv(\"data/bmi.csv\", header=TRUE)\n# Events are pH less than 4\nbmi.data$events <- bmi.data$totalmins4\n\nggplot(bmi.data, aes(x=bmi, y=events)) + geom_point() + geom_smooth() + theme_bw() + xlab(\"BMI\") + ylab(\"Number of reflux events\")\n```\n\n::: {.cell-output-display}\n![BMI by number of reflux events](Lec09.Poisson_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbmi.data$rate <- bmi.data$totalmins4/bmi.data$totalmins*60*24\nggplot(bmi.data, aes(x=bmi, y=rate)) + geom_point() + geom_smooth() + theme_bw() + xlab(\"BMI\") + ylab(\"Reflux events per day\")\n```\n\n::: {.cell-output-display}\n![BMI by number of reflux events per day](Lec09.Poisson_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n-   Characterization of plots\n\n    -   Plots are visually similar if we consider the rate (events per day) or the raw number of events\n\n    -   First order trend: Event rate increases with increasing BMI\n\n    -   Second order trend: Event rate increase until BMI of 32 (or so) and then flattens out\n\n    -   Within-group variability\n\n        -   Hard to visualize from the plots\n\n        -   Model assumes increasing variability with increasing BMI, which looks reasonable\n\n### Regression commands\n\n-   As before, but need to specify the offset\n\n    -   Offset is the log of the exposure time\n\n    -   In Stata, can alternatively specify the \"exposure\" and it will take the log for you\n\n-   Stata\n\n    -   `poisson respvar predvar, exposure(time) [robust]`\n\n    -   `poisson respvar predvar, offset(logtime) [robust]`\n\n-   R\n\n    -   One method to fit Poisson models\n\n        -   Uses the `sandwich` and `lmtest` libraries\n\n        -   Must install the above two libraries using `install.packages(\"lmtest\")` and `install.packages(\"sandwich\")`\n\n        -   `model.poisson <- glm(response ~ predictors + offset(log(time)), data=data, family=\"poisson\")`\n\n        -   `coeftest(model.poisson, vcov=sandwich)`\n\n    -   Another method to fit Poisson models using the `Design` package\n\n        -   `m1 <- glmD(response ~ predictors + offset(log(time)), data=data, family=\"poisson\", x=TRUE, y=TRUE)`\n\n        -   `bootcov(m1)` for robust (bootstrap) confidence intervals\n\n    -   Can also use methods within the `gee` library\n\n### Estimation of the regression model\n\n-   Regression model for number of reflux events on BMI\n\n    -   Answer primary research question: Is there an *association* between BMI and the acid reflux event rate?\n\n    -   Estimate the best fitting line to (log) number of reflux events within BMI groups using an offset of log time\n\n        -   $\\textrm{log}(\\textrm{Events} | \\textrm{BMI}) = \\beta_0 + \\beta_1 \\times \\textrm{BMI} + \\textrm{log}(\\textrm{time})$\n\n    -   An association will exist if the slope $\\beta_1$ is nonzero\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lmtest)\nlibrary(sandwich)\nm1.poisson <- glm(events ~ bmi + offset(log(totalmins)), data=bmi.data, family=\"poisson\")\nm1.poisson\n```\n\n::: {.cell-output-display}\n\n----------------------------------------------------------------\n     &nbsp;        Estimate    Std. Error   z value    Pr(>|z|) \n----------------- ----------- ------------ ---------- ----------\n **(Intercept)**   -3.119991   0.01887934   -165.260      0     \n\n     **bmi**       0.022319    0.00061713    36.166       0     \n----------------------------------------------------------------\n\nTable: Fitting generalized (poisson/log) linear model: events ~ bmi + offset(log(totalmins))\n\n\n------------------- -----------------\n   **Degrees of      278 Total (i.e. \n     Freedom**            Null)      \n\n   **Degrees of       277 Residual   \n     Freedom**                       \n\n **Null Deviance**       22040.9     \n\n    **Residual           20794.6     \n    Deviance**                       \n\n      **AIC**            22725.8     \n------------------- -----------------\n\n\n:::\n\n```{.r .cell-code}\ncoeftest(m1.poisson, vcov=sandwich)\n```\n\n::: {.cell-output-display}\n\n----------------------------------------------------------------\n     &nbsp;        Estimate    Std. Error   z value   Pr(>|z|)  \n----------------- ----------- ------------ --------- -----------\n **(Intercept)**   -3.119991   0.1392708    -22.402   0.000e+00 \n\n     **bmi**       0.022319    0.0046038     4.848    1.247e-06 \n----------------------------------------------------------------\n\nTable: z test of coefficients\n\n\n:::\n\n```{.r .cell-code}\nconfint(coeftest(m1.poisson, vcov=sandwich))\n```\n\n::: {.cell-output-display}\n\n-----------------------------------------\n     &nbsp;          2.5 %      97.5 %   \n----------------- ----------- -----------\n **(Intercept)**   -3.392957   -2.847026 \n\n     **bmi**       0.013296    0.031343  \n-----------------------------------------\n\n\n:::\n:::\n\n\n\n\n``` stata\n. poisson events bmi, offset(logmins) robust\n\nIteration 0:   log pseudolikelihood =  -11360.89  \nIteration 1:   log pseudolikelihood =  -11360.89  \n\nPoisson regression                                Number of obs   =        279\n                                                  Wald chi2(1)    =      23.42\n                                                  Prob > chi2     =     0.0000\nLog pseudolikelihood =  -11360.89                 Pseudo R2       =     0.0520\n\n------------------------------------------------------------------------------\n             |               Robust\n      events |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         bmi |   .0223194   .0046121     4.84   0.000     .0132799    .0313589\n       _cons |  -3.119991    .139521   -22.36   0.000    -3.393448   -2.846535\n     logmins |   (offset)\n------------------------------------------------------------------------------\n```\n\n-   Interpretation of output\n\n    -   $\\textrm{log rate} = -3.119991 + 0.0223194 \\times \\textrm{BMI}$\n\n-   Interpretation of intercept\n\n    -   Estimated event rate when BMI is 0 is found by exponentiation: $e^{-3.12} = 0.044$\n\n    -   This is the rate per 2-minute interval. This unusual time interval is an artifact of the way in pH data is sampled\n\n        -   To convert to events per day, multiply by 720 (there are 720 2-minute intervals in a day)\n\n        -   $720 \\times e^{-3.12} = 31.7 \\textrm{ events per day}$\n\n-   Interpretation of slope\n\n    -   Estimated ratio of rates for two subjects differing by 1 in their BMI\n\n    -   Interpretation by exponentiation of slope\n\n        -   A subject with a 1 $\\textrm{kg} / m^2$ higher BMI will have an acid reflux event rate that is $2.3\\%$ higher. (calc: $e^{0.0223} = 1.023$)\n\n        -   We are 95% confident that the increase in event rate is between $1.3\\%$ higher and $3.2\\%$ higher\n\n        -   There is a significant association between BMI and reflux events $p < 0.001$\n\n## Example: Acid reflux and BMI by esophagitis status\n\n### BMI modeled as a linear term\n\n-   The following results compare using a Poisson model to a linear regression model\n\n-   Both models will control for Esophagitis status, so any interpretation must involve \"Holding esophagitis status constant...\" (\"Among subjects with the same Esophagitis status...\")\n\n-   Note the different (numerical) estimates for the coefficients and standard errors for BMI and esophagitis, but the similar statistical significance\n\n-   Also if we plot the predicted number of events per day versus BMI, the results are similar from either model\n\n#### R: Poisson regression of events with offset for log(total time monitored)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm2.poisson <- glm(events ~ bmi + esop + offset(log(totalmins)), data=bmi.data, family=\"poisson\")\nm2.poisson\n```\n\n::: {.cell-output-display}\n\n----------------------------------------------------------------\n     &nbsp;        Estimate    Std. Error   z value    Pr(>|z|) \n----------------- ----------- ------------ ---------- ----------\n **(Intercept)**   -3.089033   0.01905614   -162.102      0     \n\n     **bmi**       0.019747    0.00063195    31.247       0     \n\n    **esop**       0.262217    0.01064106    24.642       0     \n----------------------------------------------------------------\n\nTable: Fitting generalized (poisson/log) linear model: events ~ bmi + esop + offset(log(totalmins))\n\n\n------------------- -----------------\n   **Degrees of      278 Total (i.e. \n     Freedom**            Null)      \n\n   **Degrees of       276 Residual   \n     Freedom**                       \n\n **Null Deviance**       22040.9     \n\n    **Residual           20217.5     \n    Deviance**                       \n\n      **AIC**            22150.7     \n------------------- -----------------\n\n\n:::\n\n```{.r .cell-code}\ncoeftest(m2.poisson, vcov=sandwich)\n```\n\n::: {.cell-output-display}\n\n------------------------------------------------------------------\n     &nbsp;        Estimate    Std. Error   z value     Pr(>|z|)  \n----------------- ----------- ------------ ---------- ------------\n **(Intercept)**   -3.089033   0.1420486    -21.7463   0.0000e+00 \n\n     **bmi**       0.019747    0.0047636     4.1453    3.3932e-05 \n\n    **esop**       0.262217    0.0830528     3.1572    1.5927e-03 \n------------------------------------------------------------------\n\nTable: z test of coefficients\n\n\n:::\n\n```{.r .cell-code}\nconfint(coeftest(m2.poisson, vcov=sandwich))\n```\n\n::: {.cell-output-display}\n\n-----------------------------------------\n     &nbsp;          2.5 %      97.5 %   \n----------------- ----------- -----------\n **(Intercept)**   -3.367443   -2.810623 \n\n     **bmi**       0.010410    0.029083  \n\n    **esop**       0.099437    0.424998  \n-----------------------------------------\n\n\n:::\n:::\n\n\n\n\n#### R: Linear regression of rate (events/time) as outcome\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmi.data$rate <- bmi.data$events / bmi.data$totalmins\nm2.lm <-  lm(rate ~ bmi + esop, data=bmi.data)\nm2.lm\n```\n\n::: {.cell-output-display}\n\n---------------------------------------------------------------\n     &nbsp;        Estimate   Std. Error   t value   Pr(>|t|)  \n----------------- ---------- ------------ --------- -----------\n **(Intercept)**   0.027846   0.01460831   1.9062    0.0576652 \n\n     **bmi**       0.001839   0.00050133   3.6683    0.0002929 \n\n    **esop**       0.025104   0.00884648   2.8377    0.0048805 \n---------------------------------------------------------------\n\nTable: Fitting linear model: rate ~ bmi + esop\n\n\n:::\n\n```{.r .cell-code}\ncoeftest(m2.lm, vcov=sandwich)\n```\n\n::: {.cell-output-display}\n\n----------------------------------------------------------------\n     &nbsp;        Estimate   Std. Error   t value    Pr(>|t|)  \n----------------- ---------- ------------ --------- ------------\n **(Intercept)**   0.027846   0.01283576   2.1694    3.0905e-02 \n\n     **bmi**       0.001839   0.00045933   4.0037    8.0196e-05 \n\n    **esop**       0.025104   0.00849883   2.9538    3.4091e-03 \n----------------------------------------------------------------\n\nTable: t test of coefficients\n\n\n:::\n\n```{.r .cell-code}\nconfint(coeftest(m2.lm, vcov=sandwich))\n```\n\n::: {.cell-output-display}\n\n-----------------------------------------\n     &nbsp;          2.5 %      97.5 %   \n----------------- ----------- -----------\n **(Intercept)**   0.0025777   0.0531145 \n\n     **bmi**       0.0009348   0.0027433 \n\n    **esop**       0.0083732   0.0418348 \n-----------------------------------------\n\n\n:::\n:::\n\n\n\n\n#### Stata Output\n\n``` stata\n. poisson events bmi esop, offset(logmins) robust\n\nPoisson regression                                Number of obs   =        279\n                                                  Wald chi2(2)    =      30.30\n                                                  Prob > chi2     =     0.0000\nLog pseudolikelihood = -11072.339                 Pseudo R2       =     0.0761\n\n------------------------------------------------------------------------------\n             |               Robust\n      events |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         bmi |   .0197465   .0047721     4.14   0.000     .0103934    .0290997\n        esop |   .2622171    .083202     3.15   0.002     .0991442      .42529\n       _cons |  -3.089033   .1423038   -21.71   0.000    -3.367944   -2.810123\n     logmins |   (offset)\n------------------------------------------------------------------------------\n\n\n. gen eventsmins = events / mins\n. regress eventsmins bmi esop, robust\n\nLinear regression                                      Number of obs =     279\n                                                       F(  2,   276) =   14.16\n                                                       Prob > F      =  0.0000\n                                                       R-squared     =  0.0856\n                                                       Root MSE      =  .05102\n\n------------------------------------------------------------------------------\n             |               Robust\n  eventsmins |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         bmi |    .001839   .0004618     3.98   0.000     .0009299    .0027482\n        esop |    .025104   .0085449     2.94   0.004     .0082826    .0419254\n       _cons |   .0278461   .0129053     2.16   0.032     .0024407    .0532515\n------------------------------------------------------------------------------\n```\n\n#### Comparison of predicted number of events from linear regression and Poisson regression models\n\n-   Example prediction calculations: BMI=30, with esophagitis\n\n    -   Linear regression: $0.0278461 + .025104 + .001839 \\times 30 = 0.108$\n\n        -   Stata: `adjust bmi=30 esop=1`\n\n    -   Poisson regression: $e^{-3.089033 + 0.2622171 + .01975465 \\times 30} = 0.107$\n\n        -   Stata: `adjust bmi=30 esop=1, nooffset exp`\n\n    -   Remember the above rates are for a 2-minute time interval. To convert to daily rates, multiply by 720\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Predicted events per two minute time interval\npredict(m2.lm, newdata=data.frame(bmi=30,esop=1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1 \n0.108121 \n```\n\n\n:::\n\n```{.r .cell-code}\nexp(predict(m2.poisson, newdata=data.frame(bmi=30,esop=1,totalmins=1), type=\"link\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        1 \n0.1070542 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Predicted events per day (720 2-minute time intervals per day)\npredict(m2.lm, newdata=data.frame(bmi=30,esop=1))*720\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1 \n77.84713 \n```\n\n\n:::\n\n```{.r .cell-code}\nexp(predict(m2.poisson, newdata=data.frame(bmi=30,esop=1,totalmins=720), type=\"link\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1 \n77.07901 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbmi.data$esop.factor <- factor(bmi.data$esop, levels=0:1, labels=c(\"Esop Neg\", \"Esop Pos\"))\nm.spline2.adj <- glm(events ~ bmi + offset(log(totalmins)) + esop, data=bmi.data, family=\"poisson\")\nm.spline3.adj <- lm(events / totalmins ~ bmi + esop, data=bmi.data)\npar(mfrow=c(1,2), mar=c(5,4,4,0.5))\nplot(18:40, exp(predict(m.spline2.adj, newdata=data.frame(bmi=18:40, totalmins=720, esop=1), type=\"link\")), type='l', ylab=\"Predicted number of events per day\", xlab=\"BMI\", ylim=c(30,100), main=\"Poisson Reg\")\naxis(4, labels=FALSE, ticks=TRUE)\nlegend(\"bottomright\", c(\"Esophagitis Pos\",\"Esophagitis Neg\"), inset=0.05, col=1, lty=1:2)\nlines(18:40, exp(predict(m.spline2.adj, newdata=data.frame(bmi=18:40, totalmins=720, esop=0), type=\"link\")), lty=2)\nplot(18:40, 720*predict(m.spline3.adj, newdata=data.frame(bmi=18:40, esop=1), type=\"response\"), type='l', col='Blue', ylab=\"\", xlab=\"BMI\", ylim=c(30,100), main=\"Linear Reg\", axes=FALSE)\naxis(1)\naxis(4)\naxis(2, labels=FALSE, ticks=TRUE)\nbox()\nlines(18:40, 720*predict(m.spline3.adj, newdata=data.frame(bmi=18:40, esop=0), type=\"response\"), type='l', col='Blue', lty=2)\nlegend(\"bottomright\", c(\"Esophagitis Pos\",\"Esophagitis Neg\"), inset=0.05, col=\"Blue\", lty=1:2)\n```\n\n::: {.cell-output-display}\n![](Lec09.Poisson_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n### BMI modeled using splines\n\n-   Regression splines are handled more naturally in R than in Stata\n\n    -   `glm(events ~ ns(bmi,4) + esop + offset(log(totalmins)), data=bmi.data, family=\"poisson\")`\n\n    -   `ns(bmi, 4)` specified a natural spline for bmi with 4 degrees of freedom\n\n-   Note that there is an optical illusion in the following plots\n\n    -   For both plots, it appears as if the lines are closer in the middle ranges of BMI\n\n    -   For the Poisson regression, the true distance between lines is increasing with increasing with BMI\n\n    -   For the Linear regrression, the true distance between lines is constant\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm.spline2.adj <- glm(events ~ ns(bmi,4) + offset(log(totalmins)) + esop, data=bmi.data, family=\"poisson\")\nm.spline3.adj <- lm(events / totalmins ~ ns(bmi,4) + esop, data=bmi.data)\npar(mfrow=c(1,2), mar=c(5,4,4,0.5))\nplot(18:40, exp(predict(m.spline2.adj, newdata=data.frame(bmi=18:40, totalmins=720, esop=1), type=\"link\")), type='l', ylab=\"Predicted number of events per day\", xlab=\"BMI\", ylim=c(0,100), main=\"Poisson Reg\")\naxis(4, labels=FALSE, ticks=TRUE)\nlegend(\"bottomright\", c(\"Esophagitis Pos\",\"Esophagitis Neg\"), inset=0.05, col=1, lty=1:2)\nlines(18:40, exp(predict(m.spline2.adj, newdata=data.frame(bmi=18:40, totalmins=720, esop=0), type=\"link\")), lty=2)\nplot(18:40, 720*predict(m.spline3.adj, newdata=data.frame(bmi=18:40, esop=1), type=\"response\"), type='l', col='Blue', ylab=\"\", xlab=\"BMI\", ylim=c(0,100), main=\"Linear Reg\", axes=FALSE)\naxis(1)\naxis(4)\naxis(2, labels=FALSE, ticks=TRUE)\nbox()\nlines(18:40, 720*predict(m.spline3.adj, newdata=data.frame(bmi=18:40, esop=0), type=\"response\"), type='l', col='Blue', lty=2)\nlegend(\"bottomright\", c(\"Esophagitis Pos\",\"Esophagitis Neg\"), inset=0.05, col=\"Blue\", lty=1:2)\n```\n\n::: {.cell-output-display}\n![](Lec09.Poisson_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n### Comparison of modeling linear BMI to using spline function\n\n-   For all regression models, we are more confident modeling associations than predicting means\n\n-   When we use a linear term (i.e. a straight line) for the predictor, we are modeling a first-order association\n\n    -   Most power to detect this type of association\n\n    -   Always need to check that a first-order association answers the scientific question\n\n        -   Counter example: Interested in seasonal trends in air pollution. A linear effect of time would only answer if air pollution levels are increasing/decreasing over time, not how they are changing from month to month\n\n-   Flexible functions for predictors, including splines, are, in general, more useful if we care about predicting means or individual observations\n\n-   Acid reflux example: Which model you choose depends on the scientific goals\n\n    -   Primary goal: Is there an association between BMI and the rate of acid reflux?\n\n        -   Fitting the linear BMI term answers this question\n\n    -   Secondary goal: Describe the (mean) trend in reflux rates as a function of BMI\n\n        -   A priori, I would be less inclined to believe a linear function captures the true mean relationship\n\n        -   To answer this scientific question, a spline analysis is preferred\n\n### Bayesian Poisson Regression\n\n#### Likelihood Function\n\n-   The Bayesian analysis begins by specifying the likelihood and prior distributions.\n\n-   For the Poisson model, the likelihood function can bewritten as:\n\n$$L(y | \\lambda) = \\prod_{i=1}^{n} \\frac{e^{-\\lambda_i} \n\\lambda_i^{y_i}}{y_i!}$$\n\nwhere $y_i$ is the observed count for each observation $i$, and $\\lambda_i$ is the expected count.\n\n-   In a Poisson regression model, $\\lambda$ is modeled as a function of the covariates **X** and coefficients $\\boldsymbol{\\beta}$, such that:\n\n$$\\lambda = \\exp(\\textbf{X} \\boldsymbol{\\beta})$$\n\n-   This equation links the expected counts to the linear predictor, allowing for the estimation of the effects of the covariates on the response variable.\n\n-   (With the Poisson likelihood, we are still assuming the mean is equal to the variance)\n\n#### Prior specification\n\n-   As with any Bayesian analysis, prior distributions must be specified for all parameters in the model\n\n-   For the Poisson regression model, $\\boldsymbol{\\theta} = \\boldsymbol{\\beta}$\n\n-   A convenient choice of prior distribution for $\\boldsymbol{\\beta}$ is the Multivariable Normal distribution\n\n$$\n\\pi(\\boldsymbol{\\beta}) \\sim \\mathcal{N}(\\boldsymbol{\\mu}, \\boldsymbol{\\Sigma})\n$$\n\n-   Here, $\\boldsymbol{\\mu}$ represents the mean vector of the prior distribution, and $\\boldsymbol{\\Sigma}$ represents the covariance matrix.\n\n-   The prior mean $\\boldsymbol{\\mu}$ and covariance $\\boldsymbol{\\Sigma}$ can be chosen based on prior knowledge or elicited from experts, or can be set to non-informative values for a more objective analysis.\n\n#### Posterior Distribution\n\n-   The posterior distribution of $\\boldsymbol{\\beta}$ is proportional to the product of the likelihood function and the prior distribution:\n\n$$\n\\pi(\\boldsymbol{\\beta} | \\textbf{y}) \\propto L(\\textbf{y} | \\lambda) \n\\cdot f(\\boldsymbol{\\beta})\n$$\n\n-   Substituting the Poisson likelihood and multivariate normal prior, we get:\n\n$$\\pi(\\boldsymbol{\\beta} | \\textbf{y}) \\propto \\prod_{i=1}^{n} \n\\frac{e^{-\\lambda_i} \\lambda_i^{y_i}}{y_i!} \\cdot \\frac{1}{\\sqrt{(2\\pi)^p \n|\\boldsymbol{\\Sigma}|}} \\exp\\left(-\\frac{1}{2} (\\boldsymbol{\\beta} - \n\\boldsymbol{\\mu})^T \\boldsymbol{\\Sigma}^{-1} (\\boldsymbol{\\beta} - \n\\boldsymbol{\\mu})\\right)\n$$\n\n-   Where $\\lambda_i = \\exp(\\textbf{x}_i \\cdot \\boldsymbol{\\beta})$, and $p$ is the number of regression coefficients.\n\n-   The posterior distribution is typically complex and does not have a closed-form expression, requiring numerical methods such as Markov chain Monte Carlo (MCMC) for inference.\n\n    -   In this course, we have been using `rstanarm` and `stan_glm` to perform MCMC\n\n### Bayesian Poisson regression example\n\n* To fit a Bayesian Poisson regression model using the `rstanarm` package, we can use the `stan_glm()` function.\n\n* The following code specifies a Bayesian model that is equivalent to the earlier frequentist model with bmi and esop and an offset\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rstanarm)\n\nm2.bayes.poisson <- stan_glm(\n  events ~ bmi + esop + offset(log(totalmins)),\n  data = bmi.data,\n  family = poisson(link = \"log\"),\n  prior = normal(location = 0, scale = 1),\n  prior_intercept = normal(location = 0, scale = 1),\n  refresh=0,\n  seed=12345\n)\nsummary(m2.bayes.poisson, digits=4, prob=c(.025, .5, .975))\n```\n\n::: {.cell-output-display}\n\n----------------------------------------------------------------------------------------------------\n function      family              formula           algorithm   sample   observations   predictors \n---------- --------------- ------------------------ ----------- -------- -------------- ------------\n stan_glm   poisson [log]    events ~ bmi + esop     sampling     4000        279            3      \n                                      +                                                             \n                            offset(log(totalmins))                                                  \n----------------------------------------------------------------------------------------------------\n\nTable: Model Info\n\n\n-----------------------------------------------------------------------------\n     &nbsp;          mean          sd         2.5%         50%       97.5%   \n----------------- ----------- ------------ ----------- ----------- ----------\n **(Intercept)**   -3.089003   0.01899929   -3.126663   -3.089206   -3.05223 \n\n     **bmi**       0.019748    0.00062851   0.018521    0.019746    0.02099  \n\n    **esop**       0.262294    0.01053901   0.242018    0.262352    0.28271  \n-----------------------------------------------------------------------------\n\nTable: Estimates\n\n\n-----------------------------------------------------------\n    &nbsp;       mean      sd      2.5%     50%     97.5%  \n-------------- -------- -------- -------- -------- --------\n **mean_PPD**   209.59   1.2004   207.34   209.59   211.93 \n-----------------------------------------------------------\n\nTable: Fit Diagnostics\n\n\nThe mean_ppd is the sample average posterior predictive distribution of the outcome variable.\n\n-----------------------------------------------\n      &nbsp;          mcse      Rhat     n_eff \n------------------- --------- --------- -------\n  **(Intercept)**    0.00032   0.99956   3585  \n\n      **bmi**        0.00001   0.99928   4015  \n\n     **esop**        0.00027   1.00178   1503  \n\n   **mean_PPD**      0.02521   1.00112   2267  \n\n **log-posterior**   0.03244   1.00201   1334  \n-----------------------------------------------\n\nTable: MCMC diagnostics\n\n\nFor each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains  (at convergence Rhat=1).\n\n\n:::\n:::\n\n\n\n\n-   In this code:\n\n    -   `events ~ bmi + esop + offset(log(totalmins))` specifies the model formula.\n    -   `family = poisson(link = \"log\")` specifies a Poisson distribution with a log link function\n    -   `prior = normal(location = 0, scale = 1)` and `prior_intercept = normal(location = 0, scale = 1)` specify priors for the regression coefficients and intercept.\n    -   `seed = 1234` sets a random seed to ensure reproducibility of the results.\n    -   `refresh = 0` suppresses the progress bar during model fitting.\n\n-   And a summary of the prior distributions used\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprior_summary(m2.bayes.poisson, digits = 2)\n```\n\n::: {.cell-output-display}\n\n----------------------------------------------------------------\n       &nbsp;           Specified prior       Adjusted prior    \n-------------------- --------------------- ---------------------\n **Intercept (after   ~ normal(location =                       \n     predictors       0, scale = 1.00000)                       \n    centered)**                                                 \n\n  **Coefficients**    ~ normal(location =   ~ normal(location = \n                      0, scale = 1.00000)   0, scale = 1.00000) \n----------------------------------------------------------------\n\nTable: Priors for model 'm2.bayes.poisson'\n\n\n:::\n:::\n\n\n\n\n#### Plot of Prior, Likelihood, Posterior\n\n-   The following shows the prior, likelihood and the posterior for the Poisson model of the $\\beta$ for BMI.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplp.plotdata <- data.frame(post.draws=as.matrix(m2.bayes.poisson)[,\"bmi\"])\n\ndensity_plot <- ggplot(plp.plotdata, aes(x = post.draws)) +\n  geom_density(aes(fill = \"Posterior (MCMC)\"), color = NA, alpha = 0.5) +\n  labs(x = \"BMI\", y = \"Density\") +\n  scale_fill_manual(values = c(\"Posterior (MCMC)\" = \"blue\")) +\n  stat_function(fun = dnorm, args = list(mean = 0.0, sd = 1), aes(color = \"Prior\"), size=1) +\n  scale_color_manual(name=\"Legend\", values = c(\"Prior\" = \"red\", \"Likelihood (Asymptotic)\" = \"green\")) +\n  stat_function(fun = dnorm, args = list(mean = coef(m2.poisson)[\"bmi\"], sd = \nsqrt(vcov(m2.poisson)[\"bmi\",\"bmi\"])), aes(color = \"Likelihood (Asymptotic)\"), size=1) +\n  theme_minimal() + theme(legend.title=element_blank())\n\nprint(density_plot)\n```\n\n::: {.cell-output-display}\n![](Lec09.Poisson_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n-   Here is just the posterior distributions for BMI and `esop`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bayesplot)\nmcmc_dens(m2.bayes.poisson, pars=c(\"bmi\",\"esop\")) +\n  labs(title = \"Posterior Distribution of bmi\",\n       subtitle = \"Bayesian Poisson Regression Model\",\n       x = \"Value\", y = \"Density\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](Lec09.Poisson_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n posterior_vs_prior(m2.bayes.poisson, pars=c(\"bmi\",\"esop\"))\n```\n\n::: {.cell-output-display}\n![](Lec09.Poisson_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n* A comparison of the coefficients estimates from the frequentist and Bayesian approaches\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrbind(glm=coef(m2.poisson),\n      Bayes.weak=coef(m2.bayes.poisson))\n```\n\n::: {.cell-output-display}\n\n---------------------------------------------------\n     &nbsp;       (Intercept)     bmi       esop   \n---------------- ------------- ---------- ---------\n    **glm**         -3.0890     0.019747   0.26222 \n\n **Bayes.weak**     -3.0892     0.019746   0.26235 \n---------------------------------------------------\n\n\n:::\n:::\n\n\n\n\n* And a comparsion of the estimated standard errors for the intercept and the slopes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrbind(glm=sqrt(diag(vcov(m2.poisson))),\n      glm.robust=sqrt(diag(sandwich(m2.poisson))),\n      Bayes.weak=sqrt(diag(vcov(m2.bayes.poisson))))\n```\n\n::: {.cell-output-display}\n\n------------------------------------------------------\n     &nbsp;       (Intercept)      bmi         esop   \n---------------- ------------- ------------ ----------\n    **glm**        0.019056     0.00063195   0.010641 \n\n **glm.robust**    0.142049     0.00476356   0.083053 \n\n **Bayes.weak**    0.018999     0.00062851   0.010539 \n------------------------------------------------------\n\n\n:::\n:::\n\n\n\n\n\n* Note that the standard errors are quite different from the roubst approach\n\n* From descriptive statistics, the mean and variance are quite different.  The standard Poisson model assumes the mean equals the variance.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(mean=mean(bmi.data$rate), var=var(bmi.data$rate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       mean         var \n0.084443330 0.002826316 \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nbmi.data <- bmi.data %>% mutate(bmi_quartile = cut2(bmi, g = 4))\n\nbmi.data %>% group_by(bmi_quartile, esop) %>% summarise(mean_rate = mean(rate, na.rm = TRUE), var_rate = var(rate, na.rm = TRUE))\n```\n\n::: {.cell-output-display}\n\n----------------------------------------------\n bmi_quartile   esop   mean_rate    var_rate  \n-------------- ------ ----------- ------------\n [18.4,24.7)     0     0.061755    0.00157239 \n\n [18.4,24.7)     1     0.092739    0.00019833 \n\n [24.7,27.7)     0     0.070957    0.00164636 \n\n [24.7,27.7)     1     0.113554    0.00232178 \n\n [27.7,32.4)     0     0.100848    0.00495929 \n\n [27.7,32.4)     1     0.099047    0.00178669 \n\n [32.4,51.0]     0     0.092644    0.00251734 \n\n [32.4,51.0]     1     0.126317    0.00345687 \n----------------------------------------------\n\n\n:::\n:::\n",
    "supporting": [
      "Lec09.Poisson_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}